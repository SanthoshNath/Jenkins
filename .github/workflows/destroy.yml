name: Destroy

on:
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}

jobs:
  Plan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Plan
        run: terraform plan -destroy -input=false

      - name: Cache repository
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: ${{ github.repository }}-${{ github.sha }}-${{ runner.os }}

  Destroy:
    runs-on: ubuntu-latest
    environment: Terraform
    needs: Plan

    steps:
      - name: Terraform cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: ${{ github.repository }}-${{ github.sha }}-${{ runner.os }}

      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        if: steps.cache.outputs.cache-hit != 'true'
        run: terraform init -input=false

      - name: Terraform Destroy
        run: terraform destroy --auto-approve -input=false

  Cleanup:
    runs-on: ubuntu-latest
    needs: [ Plan, Destroy ]
    if: ${{ always() }}

    steps:
      - name: Delete cache
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            --method DELETE \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/actions/caches?key=${{ github.repository }}-${{ github.sha }}-${{ runner.os }}
